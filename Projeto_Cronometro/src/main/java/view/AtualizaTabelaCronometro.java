/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import cidade_jardim.CidadeJardim;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.sql.Date;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import model.Cronometro;
import model.Listao;
import modelDAO.CronometroDAO_2;
import modelDAO.Cronometro_DAO;

/**
 *
 * @author wladi
 */
public class AtualizaTabelaCronometro extends javax.swing.JFrame {

    private final String PATH_IDLISTAO = "Z:\\Lixo\\ArquivosTXT_Temp\\idListaoLista.txt";

    /**
     * Creates new form AtualizaTabelaCronometro
     */
    public AtualizaTabelaCronometro() {
        initComponents();
//        try {
//            vrfArquivoIdsListaoTXT();
//        } catch (IOException ex) {
//            Logger.getLogger(AtualizaTabelaCronometro.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        
//        try {
//            CidadeJardim.inicia();
//        } catch (IOException ex) {
//            Logger.getLogger(AtualizaTabelaCronometro.class.getName()).log(Level.SEVERE, null, ex);
//        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_dia_ini = new javax.swing.JTextField();
        txt_mes_ini = new javax.swing.JTextField();
        txt_ano_ini = new javax.swing.JTextField();
        txt_dia_fim = new javax.swing.JTextField();
        txt_mes_fim = new javax.swing.JTextField();
        txt_ano_fim = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        bt_atualiza = new javax.swing.JButton();
        bt_atualizaRegistros = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Data inicial:");

        jLabel2.setText("Data final:");

        txt_dia_fim.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_dia_fimMouseClicked(evt);
            }
        });
        txt_dia_fim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_dia_fimActionPerformed(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("DIA");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("MÃŠS");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("ANO");

        bt_atualiza.setText("Atualizar Tabela");
        bt_atualiza.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_atualizaMouseClicked(evt);
            }
        });

        bt_atualizaRegistros.setText("Registros");
        bt_atualizaRegistros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_atualizaRegistrosMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_dia_fim)
                            .addComponent(txt_dia_ini)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_mes_fim)
                            .addComponent(txt_mes_ini, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_ano_fim)
                            .addComponent(txt_ano_ini)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(bt_atualiza)
                    .addComponent(bt_atualizaRegistros))
                .addGap(565, 565, 565))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txt_ano_fim, txt_ano_ini, txt_dia_fim, txt_dia_ini, txt_mes_fim, txt_mes_ini});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_dia_ini, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_mes_ini, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_ano_ini, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_dia_fim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_mes_fim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_ano_fim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(bt_atualiza)
                .addGap(64, 64, 64)
                .addComponent(bt_atualizaRegistros)
                .addContainerGap(220, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_dia_fimMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_dia_fimMouseClicked
        // TODO add your handling code here:
        txt_dia_fim.setText(txt_dia_ini.getText());
        txt_mes_fim.setText(txt_mes_ini.getText());
        txt_ano_fim.setText(txt_ano_ini.getText());
    }//GEN-LAST:event_txt_dia_fimMouseClicked

    private void bt_atualizaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_atualizaMouseClicked
        // TODO add your handling code here:
        String diaIni = txt_dia_ini.getText().trim();
        String diaFim = txt_dia_fim.getText().trim();
        String mesIni = txt_mes_ini.getText().trim();
        String mesFim = txt_mes_fim.getText().trim();
        String anoIni = txt_ano_ini.getText().trim();
        String anoFim = txt_ano_fim.getText().trim();
        String dataIni = anoIni + "-" + mesIni + "-" + diaIni;
        String dataFim = anoFim + "-" + mesFim + "-" + diaFim;
        System.out.println(dataIni);
        System.out.println(dataFim);
        List<Cronometro> listaCronometro = new ArrayList<>();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        try {
            java.sql.Date inicio = new java.sql.Date(sdf.parse(dataIni).getTime());
            java.sql.Date fim = new java.sql.Date(sdf.parse(dataFim).getTime());
            try {
                listaCronometro = Cronometro_DAO.pesquisa(inicio, fim);
            } catch (SQLException ex) {
                Logger.getLogger(AtualizaTabelaCronometro.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (ParseException ex) {
            Logger.getLogger(AtualizaTabelaCronometro.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            Cronometro_DAO.montaCronometro(listaCronometro);
        } catch (SQLException ex) {
            Logger.getLogger(AtualizaTabelaCronometro.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("\n\nDADOS cronometro==========================\n");
        try {
            Cronometro_DAO.atualizaTabelaCronometro(listaCronometro);
//        for(Cronometro c: listaCronometro){
//            System.out.println(c);
//        }
        } catch (SQLException ex) {
            Logger.getLogger(AtualizaTabelaCronometro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bt_atualizaMouseClicked

    private void txt_dia_fimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_dia_fimActionPerformed
        // TODO add your handling code here:
        txt_dia_fim.setText(txt_dia_ini.getText());
        txt_mes_fim.setText(txt_mes_ini.getText());
        txt_ano_fim.setText(txt_ano_ini.getText());
    }//GEN-LAST:event_txt_dia_fimActionPerformed

    private void bt_atualizaRegistrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_atualizaRegistrosMouseClicked
        List<Integer> lista = new ArrayList<>();
        File arquivo = new File(PATH_IDLISTAO);
        try {
            InputStream in = new FileInputStream(arquivo);
            Scanner scan = new Scanner(in);
            while (scan.hasNext()) {
                System.out.println(scan.nextLine());
                int idListao = Integer.parseInt(scan.nextLine());
                lista.add(idListao);

            }
            scan.close();
            in.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(AtualizaTabelaCronometro.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(AtualizaTabelaCronometro.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            Cronometro_DAO.atualizaTupla(lista);
        } catch (SQLException ex) {
            Logger.getLogger(AtualizaTabelaCronometro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bt_atualizaRegistrosMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AtualizaTabelaCronometro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AtualizaTabelaCronometro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AtualizaTabelaCronometro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AtualizaTabelaCronometro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AtualizaTabelaCronometro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_atualiza;
    private javax.swing.JButton bt_atualizaRegistros;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txt_ano_fim;
    private javax.swing.JTextField txt_ano_ini;
    private javax.swing.JTextField txt_dia_fim;
    private javax.swing.JTextField txt_dia_ini;
    private javax.swing.JTextField txt_mes_fim;
    private javax.swing.JTextField txt_mes_ini;
    // End of variables declaration//GEN-END:variables

    private void vrfArquivoIdsListaoTXT() throws IOException {
        List<Integer> lista = new ArrayList<>();
        File file = new File(PATH_IDLISTAO);
        if (file.exists()) {
            System.out.println("Arquivo existe.");
            InputStream in = new FileInputStream(file);
            Scanner scan = new Scanner(in);
            while (scan.hasNext()) {
                int idListao = Integer.parseInt(scan.nextLine());
                lista.add(idListao);
            }
            scan.close();
            in.close();
            try {
                CronometroDAO_2.inicia(lista);
            } catch (SQLException ex) {
                Logger.getLogger(AtualizaTabelaCronometro.class.getName()).log(Level.SEVERE, null, ex);
            }
            file.delete();
        } else {
            System.out.println("Arquivo nÃ£o existe.");
        }
    }
}
